Νεο ethmmy - Προσχέδιο
======================

Εισαγωγή
--------

###Διαφορές και προσθήκες
* Open source
* Γραμμένο σε PHP
* Βάση δεδομένων MySQL
* Οι νέες ανακοινώσεις για τα μαθήματα που 'ενδιαφέρουν' τον χρήστη θα εμφνίζονται όλες μαζί κατα χρονολογική σειρά, 
δεν χρειάζεται να πάτας click σε κάθε ένα μάθημα και σε κάθε section για να δείς αμα υπάρχει κάτι καινούργιο
* Σύστημα αυτοαξιολόγησης και ηλεκτρονικής εξέτασης
* 'Παγκόσμιες' Ανακοινώσεις

###Γιατί όλα αυτά?
Το νέο Project θα είναι open source με την λογική και ελπίδα οτι στο μέλλον θα
υπάρξουν άλλα άτομα τα οποία θα βοηθήσουν στην ανάπτυξη, βελτίωση, διόρθωμα.

Η PHP και η MySQL προυποθέτουν οτι θα πρέπει να γράψουμε τα πάντα από την αρχή 
και όχι να τροποποιήσουμε το ήδη υπάρχων κώδικα, που είναι σε Java. Παρόλο που φαίνεται ότι είναι πολύ
περισσότερη δουλειά, αυτό δεν είναι και τόσο αλήθεια, αφού αν επιλέξουμε τον δρόμο της τροποποίησης θα πρέπει να διαβάσουμε
ΟΛΟ το προηγούμενο κώδικα. Επίσης θα πρέπει να ξερουμε Java για Webservers , ενώ 
(W/L)AMP έχουμε μάθει και κάνει πράγματα στο webseminars. Επιπλέον, το project δεν
είναι τόσο μεγάλο, ώστε να είναι πολύ δύσκολο να ξαναγραφτεί. Το ethmmy όπως είναι τώρα
είναι γύρω στις 20k γραμμές και οι μισές περίπου από αυτές είναι [boilerplate](http://en.wikipedia.org/wiki/Boilerplate_code "Boilerplate code")
και exceptions κλάσεις.

Το ethmmy είναι ήδη 7 χρόνων. Τα πράγματα στο διαδίκτυο έχουν αλλάξει αρκετά από τότε που ολοκληρώθηκε.
Το τρέχων σύστημα αν και λειτουργικό , επιδέχεται μεγάλης βελτίωσης.
Το νέο σύστημα αυτοαξιολόγησης θα πάρει το τμήμα πιο 'μπροστά'.

Επίσης, δεν έχουμε κάτι να χάσουμε, αφού το τμήμα έχει ethmmy. Αν καταφέρουμε και φτιάξουμε ένα καλύτερο σύστημα καλώς. Αν πάλι όχι, δεν υπάρχουν
'συνέπειες' , εκτός βέβαια από τον χρόνο και κόπο που θα έχουμε επενδύσει. Σε όλες τις περιπτώσεις θα πάρουμε _XP_.






Αναπτυξιακά
-----------



###Λειτουργία

####Λογαριασμοί χρηστών
Θα υπάρχουν 3 είδη λογαρισμών χρηστών, οι οποίοι θα αλληλεπιδρούν διαφορετικά με το σύστημα. Αυτα είναι

1. students
2. professors
3. administrators

#####Students
Οι φοιτητές παρακολουθούν μαθήματα, τα οποία επιλέγουν από μια λίστα. Με την είσοδο τους μπάινουν στην αρχική τους σελιδά
όπου εμφανίζονται τα 'νέα' των μαθήματων (ανακοινώσεις, νέο υλικό κλπ). Μπορούν να κάνουν αυτοαξιολογήσεις, ηλεκτρονικές εξετασεις,
να γραφτουν σε εργαστήρια και εργασίες, κατεβάσουν υλικό μέσω των σελίδων του κάθε μαθήματος ωπου αυτά είναι διαθέσιμα.

#####Professors
Οι καθηγητές έχουν υπό την ευθύνη τους μια σειρά μαθημάτων, στα οποία μπορούν να γράψουν, να ανεβάσουν αρχεία ,να 
θέσουν στα μαθήματα αυτά βοηθούς κλπ.
Κάθε καθηγητής θα έχει στοιχεία επικοινωνιας, προσωπικής ιστοσελίδας και άλλες πληροφορίες. Μια άλλη ιδέα είναι να έχουν ένα είδος προφιλ
όπου θα έχουν πληροφορίες για το ερευνητικό τους έργο.
Οι καθηγητές θα έχουν δικαιώματα σύμφωνα αυτά που ορίζονται από διαχειριστές και τους διαχειριστές των μαθημάτων.


#####Administrators
Οι διαχειριστές, μπορούν να δημιουργήσουν λογαριασμούς καθηγητων και βοηθών, να ενεργοποιήσουν λογαριασμους φοιτητών, να δημιουργήσουν μαθήματα
και γενικά να διαχειρίζονται το σύστημα.


####Views
Ένα αρχείο θα είναι controller ώπου θα είναι γραμμενό το πάνω και το κάτω μέρος τοης σελίδας που θα είναι το ίδιο για όλα τα views. Η πλαινή μπάρα πλοήγησης θα εξαρτάται από το είδος του λογαριασμού του χρήστη.




#####Σελίδες μαθημάτων
Οι σελίδες μαθημάτων εχουν διάφορα tabs στα οποία οι χρήστες με κατάλληλα δικαιώματα μπορούν να επεξεργαστούν. Τα tabs είναι τουλάχιστον:

1. Πληροφορίες
2. Ανακοινώσεις
3. Υλικό
4. Πηγές
5. Βαθμολογίες
6. Εργαστήρια
7. Αυτοαξιολογήσεις

Οι καθηγητές μπορούν να δημιουργούν καινούργια tabs για εργαστήρια, εργασιες, αυτοαξιολογήσεις και ηλεκτρονικές εξετάσεις, πηγές,βαθμολογίες και tabs
περιεχομένου.

To tab των πληροφοριών θα έχει σταθερό layout. Ποιοι κάνουν το μάθημα, ένα κείμενο με το αντικείμενο και την 'ύλη' και ένα κείμενο που θα το περιγραφεί
το μάθημα.

Το tab του υλικου θα έχει φακέλους (οι οποίοι ΔΕΝ θα εμφολεύωνται), μέσα στους οποίους θα είναι τα αρχεία που ανεβάζουν οι φοιτητές.

Το tab των ανακοινώσεων θα έχει ανακοινώσεις. Οι καθηγητές θα μπορουν να γράφουν,να διαγράφουν και να επεξεργάζονται ανακοινώσεις. Οι φοιτητές απλά
θα βλέπουν το ιστορικό των ανακοινώσεων.

Κάθε εργαστήριο και εργασιά θα έχει δικό του tab. Οι καθηγητές μπορούν επεξεργάζονται της πληροφοριές και τις ομάδες καθώς και να κατεβάζουν 
ανεβασμένα αρχεία. Κάθε εργαστήριο/εργασια θά έχει μια σύντομη περιγραφή , και να αναγράφει αν είναι υποχρωτικο(η), προσθετικό και τι προσφέρει κλπ.

Tο tab των πηγών θα είναι μια λίστα με Links. Οι καθηγητές θα μπορουν να προσθέτουν καινόυργια Links στην λίστα με μια 
απλή φόρμα

Τα tab των βαθμολογιών θα έχουν βαθμολογιές. Θα γίνεται εισαγωγή απο excel με csv και κάθε βαθμολόγιο θα έχει ένα τίτλο και προαιρετικά ένα κείμενο 
με σημειώσεις το οποίο θα εμφανίζεται στο κάτω μέρος.


#####Σελίδες καθηγητών/βοηθών
Οι σελίδες των καθηγητών, θα εμφανίζουν στοίχεια επικοινωνιάς, μια λίστα με τα μαθήματα με τα οποία συσχετίζονται και προαιρετικά βιογραφικά στοιχεία
και ερευνητικό έργο. Η αρχική σελίδα των καθηγητών θα εμφανίζει τυχών εκρεμμότητες για διόρθωση ηλεκτρονικών γραπτών κλπ.

#####Σελίδα διαχείρησης
Η αρχική σελίδα των διαχείρηστων θα εμφανίζει μια λίστα με τις εκρεμμείς εγγραφές φοιτητών και τυχών άλλες εκρεμμότητες και συνδέσμους για στατιστικά
και άλλα εργαλεία διαχείρησης.

###Coding Conventions
Το project θα ανεβεί στο github και θα κάνουμε version control με το git.
Αυτοί που θα συμμετέχουμε στο ενχείρημα μπορούμε να επικοινωνούμε μεσώ facebook ή msn,
ώστε να μην σπαμάρουμε την mailing list της DE.CO.DE.

Coding style προτείνονται:

* για PHP [Allman](http://en.wikipedia.org/wiki/Allman_style#Allman_style) με αναγνωριστικά με underscores. Για opening δεν θα χρησιμοποιούμε τα 
  shorthands (`<?`,`<?= ...`), αλλά τα ολόκληρα (`<?php`, `<?php echo ...`) για λόγους συμβατότητας.
* για frontend (html/css/javascript) το στάνταρ στυλ της Java (camelCase , opening bracket στην ίδια γραμμή κλπ).
* SQL εντολες ALL CAPS και αναγνωριστικά με μικρά. 
* Θα χρησιμοποιούμε HTML 5, η οποία θα πρέπει φυσικά να περνάει validations και τα παντα
θα είναι γραμμένα με μικρά, εκτός από τα id και της κλάσεις που θα είναι με camelCase πχ
	`<p class='aLonelyParagraph' id='paragraph2'>blah...<p>.`
* Documentation θα γράφουμε με [markdown](http://daringfireball.net/projects/markdown/basics/), του οποίου κάνει χρήση αυτό το έγγραφο.

Επίσης καλό θα ήταν από την αρχή να χρησιμοποιόυμε [gettext](http://en.wikipedia.org/wiki/Gettext) για την διεθνοποίηση του συστήματος.


#####Gettext
Για την μετάφραση του συστήματος θα χρησιμοποίησουμε το ευρέως διαδεδομένο gettext. Η αρχή λειτουργίας έιναι ότι τα strings του κώδικα
περνιούνται στην συνάρτηση `_()` και επιστρέφονται μεταφρασμένα σε Locale που επιλέγεται προγραμματιστικά. Για παράδειγμα, αντι να γράφουμε
`<? echo "Σελίδα μαθήματος";?>`
Γράφουμε:
`<? echo _("Σελίδα μαθήματος");?>`
Αν υπάρχει μεταφρασμένο το string γράφεται η μετάφραση, αλλιώς γράφεται όπως το στέλνουμε.

Σε περίπτωση μεταβλητών ορισμάτων χρησιμοποίεται η sprintf. Παράδειγμα
`<? echo sprintf(_("%d mathimata stin lista"),$classes_count);?>`
Στην μετάφραση αρκεί να βάλουμε το "%d" εκεί που πρέπει να εμφανίζεται ο αριθμός.
Η μετάφραση μπορεί να είναι
`"There are %d classes on this list."`

Μετάφραση προτείνεται το [poedit](http://www.poedit.net/), το οποίο έχει την δυνατότητα να σκανάρει τα αρχεία php
και να μας βρίσκει τα string που έιναι μέσα σε `_()`. Εμείς αρκέι να γράψουμε τις αντίστοιχες μεταφράσεις.

Μπορει να χρησιμοποιηθεί για να διορθώνουμε τα ορθογραφικά
πειράζωντας μόνο τα αρχεία των μεταφράσεων και όχι τον ίδιο τον κώδικα. Τα κείμενα που δημιουργούνται απο τους
χρήστες δεν θα μπορουν να μεταφραστουν , αλλά αυτο δεν είναι πρόβλημα.






#####Αυτοαξιολόγηση
Το σύστημα της αυτοαξιολόγησης και των ηλεκτρονικών εξετάσεων θα λειτουργεί με 'περιγραφές' ερωτήσεων, οι οποίες θα
είναι γραμμένες σε μία γλώσσα περιγραφής (κάποιο xml,json scheme).

Οι καθηγητές θα δημιουργουν ερωτήσεις διαφόρων ειδών και τα μπαίνουν σε ένα 'πηγάδι'. Οι ερωτήσεις μπορούν να αυτοανακατεύονται
(ερωτήματα, λίστες, αριθμοι). Όταν ένας φοιτητής ξεκινήσει ένα τεστ, δημιουργείται μια επιλογή ερωτήσεων, και αυτή αποθηκεύεται 
στην βάση δεδομένων. Είτε με meta-μορφή , έιτε σαν τις απαντήσεις. Όταν ο φοιτητής ολοκληρώσει το τεστ, οι απαντήσεις του
βαθμολογούνται σύμφωνα με το σετ ερωτήσεων που του έγιναν. Το αποτέλεσμα αποθηκέυεται στην βάση για να το δεί ο καθηγητής.

######Είδη ερωτήσεων
1. _Αριθμητικό αποτέλεσμα_ . Μια ερώτηση με περιγραφή, σωστό σταθερό αποτέλεσμα και ακρίβεια.
2. _Ερώτηση μετάθεσης_. Μια λίστα ανακατεμένων στοιχέιων και μια σωστή σειρά.
3. _Ελεύθερο κείμενο_. Μια ερώτηση και μία ελέυθερη απάντηση καθορισμένου μήκους που χρείαζεται τα 'ματια του καθηγητή'.
4. _Πολλαπλής επιλογής_. Μια ερώτηση με μια λίστα πιθανών απαντήσεων απο τις οποίες _μια_ είναι η σωστή.
5. _Επιλογή από λίστα_. Μια ερώτηση από ώπου πρέπει να επιλεγεί ενα υποσύνολο.







###Δομή ιεραρχίας αρχείων
+ public\_html/
Δημόσιος φάκελος για τα front-end αρχεία και actions.
	+ index.php
	Αρχική σελίδα και controller. Με get μια παράμετρο v θα κάνει include το ανάλογο αρχείο view.
	+ login.php
	Είσοδος χρήστη
	+ logout.php
	Αποσύνδεση χρήστη
	+ post\_anouncement.php
	Ανάρτηση ανακοίνωσης
	+ edit\_anouncement.php
	Επεξεργασία ανακοίνωσης
	+ delete\_announcement.php
	Διαγραφή ανακοίνωσης
	+ create\_tab.php
	Δημιουργία tab μαθήματος
	+ delete\_tab.php
	Διαγραφή tab μαθήματος
	+ create\_lab.php
	Δημιουργία εργαστηρίου/εργασίας
	+ edit\_lab.php
	Επεξεργασία εργαστηρίου/εργασίας
	+ create\_lab\_team.php
	Δημιουργία ομάδας εργαστηρίου
	+ edit\_lab\_team.php
	Επεξεργασία ομάδας εργαστηρίου
	+ upload\_file\_lab.php
	Ανέβασμα αρχείων από φοιτητές για εργαστήρια και εργασίες
	+ download\_file.php
	Κατέβασμα αρχείου
	+ create\_folder.php
	Δημιουργία φακέλο στο υλικό μαθήματος
	+ upload\_file.php
	Ανέβασμα αρχείου στο υλικό μαθήματος
	+ add\_link.php
	Προσθήκη συνδέσμου στις πηγές
	+ edit\_information.php
	Επεξεργασία πληροφοριών
	+ activate\_account.php
	Ενεργοποίηση λογαριασμού φοιτητή
	+ create\_account.php
	Δημιουργία λογαριασμού
	+ register.php
	Εγγραφή φοιτητή
	+ image/
		+ resource/
		Δημόσιος φάκελος με εικονίδια κλπ.
			+ icon.png
			Εικονίδιο σελίδας
	+ js
	Φάκελος με αρχεία javascript
		+ jquery.js
		J
+ lib/
Ιδιωτικός φάκελος με αρχεία 'model' και λειτουργίες
	+ access\_rules.php
	Αρχείο δικαιωμάτων. Περιέχει συναρτήσεις που επιστρέφουν True η false αν κάποια λειτουργία μπορεί να πραγματοποιηθεί.
+ locale/.../messages.mo
Ιδιωτικός φάκελος με μεταφράσεις
+ config/
Ιδιωτικός φάκελος με ρυθμίσεις
+ file\_store/
Ιδιωτικός φάκελος με ανεβασμένα αρχεία
	+ class01/
	Αρχεία μαθήματος με id 1.
	+ class01/
	...
+ views/
Ιδιωτικός φάκελος με τα αρχεία views που θα κάνει include o controller
	+ class.php
	Σελίδα του μαθήματος. Περνιέται με get το id του μαθήματος που εμφανίζεται.
	+ professor.php
	Σελίδα καθηγητή. Πληροφορίες, επικοινωνία και βιογραφικά στοιχεία.
	+ thmmy.php
	Σελίδα με πληροφορίες για το τμήμα.
	+ about.php
	Σελίδα με πληροφορίες για το σύστημα.
	+ classes.php
	Λίστα μαθημάτων.
	+ home.php
	'Γενικό σπίτι'.
	+ home/
		+ student.php
		Αρχική φοιτητή. Εμφανίζονται τα 'νέα'. To id του χρήστη είναι πάντα αυτού που έκανε Login.
		+ professor.php
		Αρχική καθηγητή. Εμφανίζονται οι εκρεμμότητες. To id του χρήστη είναι πάντα αυτού που έκανε Login.
		+ assistant.php
		Αρχική βοηθού. Εμφανίζονται οι εκρεμμότητες. To id του χρήστη είναι πάντα αυτού που έκανε Login.
		+ admin.php
		Αρχική διαχειρηστή. Εμφανίζονται οι εκρεμμότητες. To id του χρήστη είναι πάντα αυτού που έκανε Login.
	+ views.php
	Αρχείο αντιστίχησης παραμέτρων σε τίτλο και view
+ robots.txt
Δες [robots.txt](http://en.wikipedia.org/wiki/Robots.txt)
+ index.php
Ανακατεύθυνση προς το public_hmtl/index.php
  
  
  
  
  
  
###Δομή βάσης δεδομένων
+ `users`:  
`id,username,password,first_name,last_name,aem,user_type,title,email,telephone,website,bio,registration_time,semester,last_login,salt,login_token,is_active,last_remote_adress,is_email_validated,semester_update_time,classes,email_urgent`

+ `titles`
`id,title,description`

+ `classes`:  
`id,title,description,semesters`

+ `class_accosiations`:
`id,user,class,type`

+ `class_association_types`:
`id,title,priority,permissions'

 
+ `file_folders`:
`id,name,class,public`

+ `files`:  
`id,name,full_path,folder,uploader,upload_time,download_count`



+ `announcements`:  
`id,poster,class,post_time,update_time,title,text,is_urgent`



+ `labs`:  
`id,title,class,description,folder,creation_time,update_time,register_expire,upload_expire,upload_limit,team_limit,users_per_team_limit,can_free_join,can_make_new_teams,can_lock_teams`

+ `lab_teams`:  
`id,lab,students,title,creation_time,update_time,files,is_locked`

+ `tokens`
`code,data,context`



####Σημειώσεις
`test_template.descriptor` είναι η περιγραφή στην γλώσσα περιγραφής των αυτοαξιολογήσεων
`test_instance.descriptor` χρησιμοποείται για επαλήθευση των απαντήσεων
`test_submissions` ειναι ένα ενδιάμεσο στάδιο για εξετάσεις με ερωτήσεις ελευθέρου κειμένου.

`file_folders.public == true` ,τότε εμφανίζεται στους φοιτητές, αλλιώς μόνο στους καθηγητές στο υλικο του μαθήματος.
Τα αρχεία των εργαστηρίων πηγαίνουν όλα σε ένα ξεχωριστο row του `file_folders` για το κάθε μάθημα.

Τα field με πολλά στοιχεία είναι comma seperated lists. 
Δες [`implode()`](http://php.net/manual/en/function.implode.php),[`explode()`](http://www.php.net/manual/en/function.explode.php)
Μπορουν να μπουν σε SQL Queries με [`FIND_IN_SET()`](http://dreamluverz.com/developers-tools/mysql/mysql-find_in_set-and-in)

`files.uploader`,`test_template.creator` είναι `$id` όπου
$id το id του χρήστη

`users.user_type` == 0 : guest/ τιποτα
		     1 : student
		     2 : professor
		     3 : admin


`users.is_active` == 0 : inactive
		     1 : active

Τα global announcements είναι στο table announcements me class=0

labs.folder είναι φάκελος όπου αποθηκεύονται τα αρχεία των φοιτητών για τις εργασίες, αν το μάθημα δεν επιτρέπει ανέβασμα αρχείων
το folder είναι 0
###Κάποια Θέματα ασφαλείας

Οι χρήστες θα κάνουν login με κωδικούς. Ο κωδικος με προσθήκη ένος τυχαίου και μοναδικού 'αλατιού' θα περνάει από μια συνάρτηση
κατακερματισμού και θα αποθηκεύεται στην βάση δεδομένων. Στον υπολογιστή του χρήστη και στη βαση θα αποθηκέυεται ενα cookie με
ενα κατακερματισμό κάποιου συνδυασμού IP adress και Timestamp. H αλλαγγή του κωδικού θα γίνεται μέσω email.

Τα αρχεία που θα ανεβαίνουν θα είναι σε ιδιωτικό φάκελο. Για να κατεβεί ένα αρχείο θα δημιουργείται πρώτα ένα προσωρινό αντίγραφο
το οποίο θα έιναι αυτό που θα λαμβάνουν οι χρήστες.

Tα κείμενα που θα είναι αποθηκευμένα στην βάση δεδομένων θα μπορουν περιέχουν html tags από ένα περιορισμένο υποσύνολο.

Μεγάλο θέμα είναι το MySQL injection.

LOG TYPES
=========

100 : download , data : file_id,user_id,downloader_ip
101 : upload   , data : file_id,ip
102 : upload lab file , data : file_id,ip
103 : email validation , data : user_id
104 : announcement , data : announcement_id
105 : new folder , data : user_id,folder_id
106 : new lab , data : user_id,lab_id
107 : new lab team , data : lab_team_id
108 : new lab teams bulk , data : user_id,lab_id,count
109 : password change , data : user_id
110 : new user , data : user_id
111 : new class , data : user_id,class_id
.......... Check lib/log.php for others


QUIZ SYSTEM
===========

lib/quiz.php
	function evaluate_quiz(quiz_instance,quiz_anwsers);
	function generate_quiz_instance(quiz_template);
	function generate_quiz_html(quiz_instance);
	function validate_quiz_template_description(quiz_template_description);

views/new_quiz.php
views/edit_quiz.php
views/quiz_info.php
views/quiz.php
views/quiz_result.php
views/quiz_anwsers.php

public_html/new_quiz.php
public_html/edit_quiz.php
public_html/start_quiz.php
public_html/submit_quiz.php
public_html/evaluate_quizs.php
public_html/evaluate_anwser.php

views/new_quiz.php --> public_html/new_quiz.php --> validate_quiz_template_description() --> db:quiz_templates --> views/quiz_info.php
views/quiz_info.php --> start_quiz.php --> generate_quiz_instance() -->  db:quiz_instances --> views/quiz.php --> submit_quiz.php --> db:quiz_anwsers
views/quiz_info.php --> evaluate_quizs.php --> evaluate_quiz() --> db:quiz_results --> views/quiz_result.php
views/quiz_info.php --> views/quiz_result.php
views/quiz_info.php --> views/edit_quiz.php --> public_html/edit_quiz.php --> validate_quiz_template_description() --> db:quiz_templates --> views/quiz_info.php
views/quiz_info.php --> views/quiz_anwsers.php --> views/evaluate_anwser.php --> views/quiz_anwsers.php
